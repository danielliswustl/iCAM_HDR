function outImage = render_hdr(imageIn)% Written by: Garrett M. Johnson%% This function performs the "meat" of the iCAM% High-Dynamic Range tone mapping. It is passed% a floating point RGB image%% Modified: 12/12/03%% Assume the RGB image is in a linearized% choose a generic RGB space (Measured LCD primaries...)rgb2xyz = cmatrix('rgb2xyz')';%renormalize matrixrgb2xyz = rgb2xyz./sum(rgb2xyz(:,2)).*100;% Transform to XYZ spacexyzImage = changeColorSpace(imageIn, rgb2xyz);% perform the forward iCAM hdr transformicamImage = iCam_hdr(xyzImage);% Invert the IPT transformicamXYZ = inv_ipt(icamImage);% Invert the chromatic adaptation transformicamXYZa = inv_cat(icamXYZ);% Transform back from XYZ to RGBicamRGB = changeColorSpace(icamXYZa, inv(rgb2xyz));% Find the 0.99 percentile (or quartile)perc = prctile(icamRGB(:),99);% clip the image to the 0.99 percentile, apply% a gamma correction, and scale the min and max% of the image to 0 and 255outImage = min(icamRGB,perc);outImage = ((outImage - min(outImage(:))) ./ (max(outImage(:)) - min(outImage(:)))).^(1/1.7);outImage = uint8(round(255*outImage));